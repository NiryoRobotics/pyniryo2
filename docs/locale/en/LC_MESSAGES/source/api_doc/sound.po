# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Niryo All rights reserved. No part of this document
# may be reproduced or transmitted in any form or by any means without prior
# written consent of Niryo SAS
# This file is distributed under the same license as the PyNiryo2 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyNiryo2 v1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-09 13:25+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/api_doc/sound.rst:2
msgid "Sound"
msgstr ""

#: ../../source/api_doc/sound.rst:4
msgid ""
"This file presents the different :ref:`functions "
"<source/api_doc/sound:Sound - Command functions>`, :ref:`enums "
"<source/api_doc/sound:Sound - Enums>` and :ref:`topics "
"<source/api_doc/sound:Sound - Niryo Topics>` available with the Sound API"
msgstr ""

#: ../../source/api_doc/sound.rst:9
msgid "Sound - Command functions"
msgstr ""

#: ../../source/api_doc/sound.rst:15
msgid ""
"This section reference all existing functions to control the Sound "
"interface of the Ned2. All functions are accessible via an instance of "
"the class :ref:`NiryoRobot <source/api_doc/niryo_robot:NiryoRobot>` ::"
msgstr ""

#: ../../source/api_doc/sound.rst:25
msgid "List of functions:"
msgstr ""

#: of pyniryo2.sound.sound.Sound:1
msgid "Sound robot functions"
msgstr ""

#: of pyniryo2.sound.sound.Sound:3 pyniryo2.sound.sound.Sound.delete:3
#: pyniryo2.sound.sound.Sound.play:3 pyniryo2.sound.sound.Sound.save:6
#: pyniryo2.sound.sound.Sound.set_volume:5 pyniryo2.sound.sound.Sound.stop:3
msgid "Example: ::"
msgstr ""

#: of pyniryo2.sound.sound.Sound pyniryo2.sound.sound.Sound.delete
#: pyniryo2.sound.sound.Sound.play pyniryo2.sound.sound.Sound.save
#: pyniryo2.sound.sound.Sound.say pyniryo2.sound.sound.Sound.set_volume
msgid "Parameters"
msgstr ""

#: of pyniryo2.sound.sound.Sound:8
msgid "Niryo ROS client"
msgstr ""

#: ../../source/api_doc/sound.rst:34
msgid "Sound - Play"
msgstr ""

#: of pyniryo2.sound.sound.Sound.play:1
msgid "Play a sound that as already been imported by the user on the robot."
msgstr ""

#: of pyniryo2.sound.sound.Sound.play
msgid "param"
msgstr ""

#: of pyniryo2.sound.sound.Sound.play:22
msgid "sound_name: Name of the sound that will be played"
msgstr ""

#: of pyniryo2.sound.sound.Sound.play:24
msgid "wait for the end of the sound before exiting the function"
msgstr ""

#: of pyniryo2.sound.sound.Sound.play:26
msgid "start the sound from this value in seconds"
msgstr ""

#: of pyniryo2.sound.sound.Sound.play:28
msgid "end the sound at this value in seconds"
msgstr ""

#: ../../source/api_doc/sound.rst:72 of pyniryo2.sound.Sound.sounds
#: pyniryo2.sound.Sound.state pyniryo2.sound.Sound.volume
#: pyniryo2.sound.sound.Sound.delete
#: pyniryo2.sound.sound.Sound.get_sound_duration
#: pyniryo2.sound.sound.Sound.get_sounds pyniryo2.sound.sound.Sound.get_volume
#: pyniryo2.sound.sound.Sound.play pyniryo2.sound.sound.Sound.save
#: pyniryo2.sound.sound.Sound.say pyniryo2.sound.sound.Sound.set_volume
#: pyniryo2.sound.sound.Sound.stop
msgid "Return type"
msgstr ""

#: of pyniryo2.sound.sound.Sound.stop:1
msgid ""
"Stop a sound being played. It will get automatically the name of the "
"sound being played and stop it."
msgstr ""

#: of pyniryo2.sound.Sound.state:1
msgid ""
"Returns the sound state client which can be used synchronously or "
"asynchronously to obtain the current played sound."
msgstr ""

#: of pyniryo2.sound.Sound.sounds:3 pyniryo2.sound.Sound.state:4
#: pyniryo2.sound.Sound.volume:4
#: pyniryo2.sound.sound.Sound.get_sound_duration:3
#: pyniryo2.sound.sound.Sound.get_sounds:3
#: pyniryo2.sound.sound.Sound.get_volume:3
msgid "Examples: ::"
msgstr ""

#: of pyniryo2.sound.Sound.sounds pyniryo2.sound.Sound.state
#: pyniryo2.sound.Sound.volume pyniryo2.sound.sound.Sound.get_sound_duration
#: pyniryo2.sound.sound.Sound.get_sounds pyniryo2.sound.sound.Sound.get_volume
msgid "Returns"
msgstr ""

#: of pyniryo2.sound.Sound.state:17
msgid "sound state topic instance"
msgstr ""

#: of pyniryo2.sound.sound.Sound.say:1
msgid "Use gtts (Google Text To Speech) to interpret a string as sound"
msgstr ""

#: of pyniryo2.sound.sound.Sound.say:3
msgid "Languages available are: ::"
msgstr ""

#: of pyniryo2.sound.sound.Sound.say:11
msgid "Example ::"
msgstr ""

#: of pyniryo2.sound.sound.Sound.say:18
msgid "Text that needs to be spoken < 100 char"
msgstr ""

#: of pyniryo2.sound.sound.Sound.say:20
msgid "language of the text"
msgstr ""

#: ../../source/api_doc/sound.rst:42
msgid "Sound - Volume"
msgstr ""

#: of pyniryo2.sound.Sound.volume:1
msgid ""
"Returns the volume state client which can be used synchronously or "
"asynchronously to obtain the current volume."
msgstr ""

#: of pyniryo2.sound.Sound.volume:17
msgid "volume topic instance"
msgstr ""

#: of pyniryo2.sound.sound.Sound.get_volume:1
msgid ""
"Returns the volume of the robot. The sound can be set between 0 (sound "
"off) and 100 (sound max)"
msgstr ""

#: of pyniryo2.sound.sound.Sound.get_volume:8
msgid "int8 corresponding to the volume (0: sound off, 100: sound max)"
msgstr ""

#: of pyniryo2.sound.sound.Sound.set_volume:1
msgid ""
"Set the volume of the robot. You can set it between 0 and 100 (0: sound "
"off and 100: sound max). If you put less than 0, the volume will be set "
"to 0. If you put more than 100, the volume will be set to 100."
msgstr ""

#: of pyniryo2.sound.sound.Sound.set_volume:12
msgid "Between O and 100 (0 sound off and 100 sound maximum)"
msgstr ""

#: ../../source/api_doc/sound.rst:49
msgid "Sound - Manage"
msgstr ""

#: of pyniryo2.sound.Sound.sounds:1 pyniryo2.sound.Sound.sounds:7
#: pyniryo2.sound.sound.Sound.get_sounds:1
#: pyniryo2.sound.sound.Sound.get_sounds:7
msgid "Returns the list of available sounds in the robot"
msgstr ""

#: of pyniryo2.sound.sound.Sound.save:1
msgid ""
"Import a sound on the RaspberryPi of the robot. To do that, you will need"
" the encoded data from a wav or mp3 sound. It is preferable to put the "
"encoded data from the sound on a text file and directly read it from this"
" file. You also need to give the name of the sound you want to import."
msgstr ""

#: of pyniryo2.sound.sound.Sound.save:17
msgid "For example, test.wav. Il will be the name of the sound in the robot"
msgstr ""

#: of pyniryo2.sound.sound.Sound.save:19
msgid "absolute path to the sound file"
msgstr ""

#: of pyniryo2.sound.sound.Sound.delete:1
msgid "Delete a sound imported on the robot"
msgstr ""

#: of pyniryo2.sound.sound.Sound.delete:8
msgid "For example, test.wav"
msgstr ""

#: of pyniryo2.sound.sound.Sound.get_sound_duration:1
msgid "Get the duration of a sound in seconds"
msgstr ""

#: of pyniryo2.sound.sound.Sound.get_sound_duration:9
msgid "Returns the duration of a sound in seconds"
msgstr ""

#: ../../source/api_doc/sound.rst:59
msgid "Sound - Niryo Topics"
msgstr ""

#: ../../source/api_doc/sound.rst:61
msgid ""
"The use of these functions is explained in the :ref:`NiryoTopics "
"<source/api_doc/niryo_topics:NiryoTopic>`, section. They allow the "
"acquisition of data in real time by callbacks or by direct call."
msgstr ""

#: ../../source/api_doc/sound.rst:64
msgid "Sound's Niryo Topics"
msgstr ""

#: ../../source/api_doc/sound.rst:70
msgid "Name"
msgstr ""

#: ../../source/api_doc/sound.rst:71
msgid "Function"
msgstr ""

#: ../../source/api_doc/sound.rst:73
msgid "``/niryo_robot_sound/sound``"
msgstr ""

#: ../../source/api_doc/sound.rst:74
msgid ":attr:`~.sound.Sound.state`"
msgstr ""

#: ../../source/api_doc/sound.rst:75
msgid ":exc:`str`"
msgstr ""

#: ../../source/api_doc/sound.rst:76
msgid "``/niryo_robot_sound/sound_database``"
msgstr ""

#: ../../source/api_doc/sound.rst:77
msgid ":attr:`~.sound.Sound.sounds`"
msgstr ""

#: ../../source/api_doc/sound.rst:78
msgid ":exc:`dict`"
msgstr ""

#: ../../source/api_doc/sound.rst:79
msgid "``/niryo_robot_sound/volume``"
msgstr ""

#: ../../source/api_doc/sound.rst:80
msgid ":attr:`~.sound.Sound.volume`"
msgstr ""

#: ../../source/api_doc/sound.rst:81
msgid ":exc:`int`"
msgstr ""

#: ../../source/api_doc/sound.rst:84
msgid "Sound - Enums"
msgstr ""

#: ../../source/api_doc/sound.rst:86
msgid "List of enums:"
msgstr ""

#: ../../source/api_doc/sound.rst:88
msgid ":class:`~.sound.enums.ManageSound`"
msgstr ""

#: ../../source/api_doc/sound.rst:89
msgid ":class:`~.sound.enums.Language`"
msgstr ""

#: of pyniryo2.sound.enums.ManageSound:1
msgid "Enumeration of the actions of sound database management"
msgstr ""

#: of pyniryo2.sound.enums.Language:1
msgid "Enumeration of the Text To Speech languages"
msgstr ""

#~ msgid ""
#~ "This file presents the different "
#~ ":ref:`functions <source/api_doc/sound:Sound - "
#~ "Command functions>`, :ref:`enums "
#~ "<source/api_doc/sound:Sound - Enums>` and "
#~ ":ref:`topics <source/api_doc/sound:Sound - Niryo "
#~ "Topics>` available with the Led Ring "
#~ "API"
#~ msgstr ""

#~ msgid "Led Ring's Niryo Topics"
#~ msgstr ""

#~ msgid "encoded data from a sound (type can be wav or mp3)"
#~ msgstr ""

#~ msgid "For example, test.wav. Il will be the nome of the sound in the robot"
#~ msgstr ""

