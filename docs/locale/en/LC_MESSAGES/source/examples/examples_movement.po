# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Niryo All rights reserved. No part of this document
# may be reproduced or transmitted in any form or by any means without prior
# written consent of Niryo SAS
# This file is distributed under the same license as the PyNiryo2 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyNiryo2 v1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-26 15:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/examples/examples_movement.rst:2
msgid "Examples: Movement"
msgstr ""

#: ../../source/examples/examples_movement.rst:4
msgid ""
"This document shows how to control Ned in order to make Move Joints & "
"Move Pose."
msgstr ""

#: ../../source/examples/examples_movement.rst:6
msgid ""
"If you want see more, you can look at :ref:`PyNiryo - "
"Arm<source/api_doc/arm:Arm>`"
msgstr ""

#: ../../source/examples/examples_movement.rst:9
msgid ""
"In following sections, it is supposed that you are already connected to a"
" calibrated robot. The robot instance is save in the variable ``robot``. "
"To know how to do so, go look at section :doc:`examples_basics`"
msgstr ""

#: ../../source/examples/examples_movement.rst:14
msgid ""
"If you are using the real robot, make sure the environment around it is "
"clear"
msgstr ""

#: ../../source/examples/examples_movement.rst:17
msgid "Joints"
msgstr ""

#: ../../source/examples/examples_movement.rst:20
msgid "Move Joints"
msgstr ""

#: ../../source/examples/examples_movement.rst:21
msgid "To make a moveJ, you need to pass :"
msgstr ""

#: ../../source/examples/examples_movement.rst:23
msgid "a list of 6 floats : ``[j1, j2, j3, j4, j5, j6]``"
msgstr ""

#: ../../source/examples/examples_movement.rst:25
msgid ""
"It is possible to pass these parameters the function "
":meth:`~.arm.Arm.move_joints` or a via the ``joints`` setter, at your "
"convenience::"
msgstr ""

#: ../../source/examples/examples_movement.rst:37
msgid ""
"You should note that these 4 commands are doing exactly the same thing ! "
"In your future scripts, chose the one you prefer, but try to remain "
"consistent to keep a good readability"
msgstr ""

#: ../../source/examples/examples_movement.rst:42
msgid "Get Joints"
msgstr ""

#: ../../source/examples/examples_movement.rst:43
msgid ""
"To get actual joint positions, you can use the function "
":meth:`~.arm.Arm.get_joints` or the ``joints`` getter. Both will return a"
" list of the 6 joints position::"
msgstr ""

#: ../../source/examples/examples_movement.rst:53
msgid ""
"As we are developing in Python, we can unpack list very easily, which "
"means that we can retrieve joints value in 6 variables by writing ``j1, "
"j2, j3, j4, j5, j6 = robot.arm.get_joints()``"
msgstr ""

#: ../../source/examples/examples_movement.rst:57
msgid "Pose"
msgstr ""

#: ../../source/examples/examples_movement.rst:60
msgid "Move Pose"
msgstr ""

#: ../../source/examples/examples_movement.rst:61
msgid "To perform a moveP, you can pass :"
msgstr ""

#: ../../source/examples/examples_movement.rst:63
msgid "a list of 6 floats : [x, y, z, roll, pitch, yaw]"
msgstr ""

#: ../../source/examples/examples_movement.rst:64
msgid "a |pose_object|"
msgstr ""

#: ../../source/examples/examples_movement.rst:66
msgid ""
"As for MoveJ, it is possible to pass these parameters the function "
":meth:`~.arm.Arm.move_pose` or the ``pose`` setter, at your convenience::"
msgstr ""

#: ../../source/examples/examples_movement.rst:83
msgid "Each of these 6 commands are doing the same thing"
msgstr ""

#: ../../source/examples/examples_movement.rst:86
msgid "Get Pose"
msgstr ""

#: ../../source/examples/examples_movement.rst:87
msgid ""
"To get end effector actual pose, you can use the function "
":attr:`~.arm.Arm.get_pose` or the ``pose`` getter. Both will return a "
"|pose_object| ::"
msgstr ""

#: ../../source/examples/examples_movement.rst:99
msgid "How to use the PoseObject"
msgstr ""

#: ../../source/examples/examples_movement.rst:100
msgid ""
"The |pose_object| is a Python Object which allow to store all pose's 6 "
"coordinates (x, y, z, roll, pitch, yaw) in one single instance. It can be"
" converted into a list if needed with the method "
":meth:`~.objects.PoseObject.to_list`"
msgstr ""

#: ../../source/examples/examples_movement.rst:105
msgid ""
"It also allows to create new |pose_object| with some offset, much easier "
"than copying list and editing only 1 or 2 values. For instance, imagine "
"that we want to shift the place pose by 5 centimeters at each iteration "
"of a for loop, you can use the "
":meth:`~.objects.PoseObject.copy_with_offsets` method::"
msgstr ""

